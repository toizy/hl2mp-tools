# Description
CONFIG_DESCRIPTION="[HL2DM] Deathmatch server"
CONFIG_ID="ID1"		# Unique ID of the config. Spaces are not allowed.
CONFIG_ENABLED=yes	# 'yes' to enable, any different value to disable (run.sh will ignore disabled config)
#
# Enabled workers
#
WORKER_DEMO=yes			# 'yes' to enable, any different value to disable
WORKER_LOGS=yes			# 'yes' to enable, any different value to disable
WORKER_LOGS_SM=yes		# 'yes' to enable, any different value to disable
WORKER_SYNC=yes			# 'yes' to enable, any different value to disable
WORKER_DISK=yes			# 'yes' to enable, any different value to disable
WORKER_YANDEX_DISK=yes	# 'yes' to enable, any different value to disable
#
# Shared vars
#
WORKER_RESULT=""		# For internal use. Stores an intermediate result.
ZIP_COMPRESSION_RATE=-9	# Compression rate. It can be only -0 (store) -1 (fast) -6 (normal) or -9 (max)
ZIP_USE_NICE=true		# True to save CPU time while zipping
ZIP_NICE_VALUE=19		# 'nice' priority value in the range of -20..19. 19 is the lowest priority value.
#
# Telegram bot settings
#
TELEGRAM_BOT_TOKEN=			# Your Tg bot token
TELEGRAM_CHATID=			# Chat ID (to send notifications to)
TELEGRAM_USERID=			# User ID (to mention a user in a muted group)
TELEGRAM_USERNAME=			# A username to mention. Any one you like.
#
# Local machine settings
#
GAME_DIR=						# Path to game dir - 'hl2mp', 'cstrike' etc. (for example /home/user/servers/hl2dm/hl2mp)
PACKED_DIR="$GAME_DIR/packed"	# A subdirectory for compressed files

DEMOS_DIR="$GAME_DIR/demos"				# Recorded demos path
DEMOS_ZIP_DIR="$PACKED_DIR/demos"	# Path to zipped files
DEMOS_KEEP_COUNT=65535					# How many demos should be kept

LOGS_DIR="$GAME_DIR/logs"				# Game logs path
LOGS_ZIP_DIR="$PACKED_DIR/logs"	# Path to zipped logs
LOGS_KEEP_COUNT=65535					# How many lines should be kept

LOGS_SM_DIR="$GAME_DIR/addons/sourcemod/logs"		# Sourcemod logs path
LOGS_SM_ZIP_DIR="$PACKED_DIR/sourcemod-logs"	# Path to zipped logs
LOGS_SM_KEEP_COUNT=65535							# How many lines should be kept

CONSOLE_LOG_FILE="$GAME_DIR/console.log"					# Path to console.log
CONSOLE_LOG_ZIP_DIR="$PACKED_DIR/console-logs"			# Path to zipped console.log
CONSOLE_LOG_LINES=65535	# if less than 1 - delete all lines	# How many lines of the log should be kept

DISK_CHECKLIST=()	# Array of disks to check for free space. Format: '/dev/vda2:10G' (last symbol should be B, K, M or G)
#
# Remote machine
#
REMOTE_HOST=							# Host or IP address of a remote machine
REMOTE_PORT=							# SSH connection port (usually 22)
REMOTE_USER=							# User name
REMOTE_KEY=								# A private key file (usually placed in ~/.ssh/, see the ssh-keygen command)
REMOTE_FROM="$DEMOS_ZIP_DIR"			# Any local directory you want to transfer to the remote machine. Or variables like $DEMOS_ZIP_DIR
REMOTE_TO=								# The directory on the remote machine where the files will be received

# rsync modificators
RSYNC_BANDWIDTH="10000"					# KB/s, bandwidth limitation
RSYNC_PROGRESS="yes"					# Progress in logs
RSYNC_USECRC="no"						# Use CRC algorythm (MD4/MD5) instead of mod-time & size when transferring. Slower, rarely required
RSYNC_PRESERVETIME="yes"				# Keep modification times
RSYNC_HUMANREADABLE="yes"				# Human-friendly logs
RSYNC_RECURSE="yes"						# Recurse into directories
RSYNC_DELETE="no"						# Delete extraneous files from destination dirs
RSYNC_DELETE_SOURCE="no"				# Delete synchronized files on sender side
RSYNC_CUSTOM_RULES=""					# Any custom rsync rules (for example: "--exclude={'file1.txt','dir1/*','dir2'}")
#
# Yandex.Disk worker settings
#
declare -A YD

# Yandex.Disk API Tokens:
YD[TOKENS]="TOKEN1 TOKEN2 TOKEN3"
YD[DELETION_LIMIT]="5"					# How many files will be deleted in one pass. A value up to 10-20 will be ok.
YD[APP_FOLDER]="files"					# A subdirectory's name in app's folder on Yandex.Disk
YD[MINIMUM_DISK_SPACE]="102G"			# Minimum disk free space, otherwise - clean up
YD[DELETE_PERMANENTLY]="true"			# true - delete permanently, any other value - keep in trash bin after deletion
YD[MAX_EXECUTION_TIME]="600"			# Max cleaning up time
YD[UPLOAD_TYPES]=".*(dem.zip|log|etc)"	# Any valid POSIX regular expression.